I want to implement a "Mode" selection option on the home screen of my memory game, placed below the "Matchable Pairs" selection section.

There will be 3 modes to choose from:

Modes:
🔷 Rush:
The player has a countdown timer to finish the game.

Timer starts at a predefined value based on the board size (e.g., small gets more generous time, large gets tighter).

Timer decreases every second.

When the timer reaches 0 before all pairs are matched → the player loses.

Moves are still counted (just for stats) and increase normally as the player flips pairs.

🔷 Moves:
The player has a limited number of moves to finish the game.

The move limit is predefined based on the board size.

Moves remaining decrease each time the player flips a pair (or as per current move counting logic).

When moves reach 0 before all pairs are matched → the player loses.

Timer still runs upward (counts how much time the player takes), but it does not affect the game outcome.

🔷 Casual:
No restrictions — current implementation already works like this.

Timer and moves both increase normally (for stats only).

The player wins when all cards are matched — no loss condition.

Notes:
Add the mode selector UI below the “Matchable Pairs” section, styled similarly (toggle buttons, with the active mode highlighted).

The timer and moves display should always be visible on the game screen, regardless of mode.

Depending on the mode, the behavior of timer and moves should change as described above.

The limits for Rush and Moves modes should be configurable (e.g., per board size) in a clear way in code.

Save the selected mode in the same config/localStorage as the other settings.

Win/Loss logic:
Rush → lose if timer = 0 before all cards are matched.

Moves → lose if moves = 0 before all cards are matched.

Casual → no loss condition — win when all cards matched.

In the Win/Loss modal:
Show the final time taken, moves used, and mode played.

If the player loses, show an appropriate message:

Rush → “Time’s up!”

Moves → “No more moves!”

✅ Implement the UI for selecting modes.
✅ Implement the logic for Rush & Moves modes as described.
✅ Keep Casual mode as is, but make it selectable in the UI.
✅ Timer & Moves counters always visible and working as per mode logic.
✅ Ensure clear win/loss detection and appropriate modal messaging.